(function() {
    var type_impls = Object.fromEntries([["game",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ProblemTypes\" class=\"impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#210\">source</a><a href=\"#impl-Clone-for-ProblemTypes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#210\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","game::layer::problems_diff::Options"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ProblemTypes\" class=\"impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#210\">source</a><a href=\"#impl-PartialEq-for-ProblemTypes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#210\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","game::layer::problems_diff::Options"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProblemTypes\" class=\"impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#215-248\">source</a><a href=\"#impl-ProblemTypes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#216-220\">source</a><h4 class=\"code-header\">pub fn <a href=\"game/layer/problems_diff/struct.ProblemTypes.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section><section id=\"method.show\" class=\"method\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#222-224\">source</a><h4 class=\"code-header\">pub fn <a href=\"game/layer/problems_diff/struct.ProblemTypes.html#tymethod.show\" class=\"fn\">show</a>(&amp;self, problem: &amp;<a class=\"enum\" href=\"sim/analytics/enum.Problem.html\" title=\"enum sim::analytics::Problem\">Problem</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.to_controls\" class=\"method\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#226-237\">source</a><h4 class=\"code-header\">pub fn <a href=\"game/layer/problems_diff/struct.ProblemTypes.html#tymethod.to_controls\" class=\"fn\">to_controls</a>(&amp;self, ctx: &amp;mut EventCtx&lt;'_&gt;) -&gt; Widget</h4></section><section id=\"method.from_controls\" class=\"method\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#239-247\">source</a><h4 class=\"code-header\">pub fn <a href=\"game/layer/problems_diff/struct.ProblemTypes.html#tymethod.from_controls\" class=\"fn\">from_controls</a>(panel: &amp;Panel) -&gt; Self</h4></section></div></details>",0,"game::layer::problems_diff::Options"],["<section id=\"impl-StructuralPartialEq-for-ProblemTypes\" class=\"impl\"><a class=\"src rightside\" href=\"src/game/layer/problems_diff.rs.html#210\">source</a><a href=\"#impl-StructuralPartialEq-for-ProblemTypes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"game/layer/problems_diff/struct.ProblemTypes.html\" title=\"struct game::layer::problems_diff::ProblemTypes\">ProblemTypes</a></h3></section>","StructuralPartialEq","game::layer::problems_diff::Options"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7470]}